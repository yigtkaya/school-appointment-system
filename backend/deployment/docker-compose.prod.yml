version: '3.8'

# Production Docker Compose Configuration
# Usage: docker-compose -f deployment/docker-compose.prod.yml up -d

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: school-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-schooladmin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-school_appointments}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-schooladmin}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: school-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # FastAPI Backend
  api:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: school-api
    restart: unless-stopped
    env_file:
      - ../.env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4

  # Celery Worker
  celery-worker:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: school-celery-worker
    restart: unless-stopped
    env_file:
      - ../.env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      - postgres
      - redis
      - api
    networks:
      - app-network
    command: celery -A app.core.celery_app worker --loglevel=info --concurrency=4

  # Celery Beat
  celery-beat:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: school-celery-beat
    restart: unless-stopped
    env_file:
      - ../.env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
    volumes:
      - celery_beat_data:/app/celerybeat-schedule
    depends_on:
      - postgres
      - redis
      - celery-worker
    networks:
      - app-network
    command: celery -A app.core.celery_app beat --loglevel=info

  # Flower (Optional - remove in production if not needed)
  flower:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: school-flower
    restart: unless-stopped
    environment:
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      FLOWER_BASIC_AUTH: ${FLOWER_USER}:${FLOWER_PASSWORD}
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    depends_on:
      - redis
      - celery-worker
    networks:
      - app-network
    command: celery -A app.core.celery_app flower --port=5555

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  celery_beat_data:
